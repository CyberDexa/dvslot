import { createClient } from '@supabase/supabase-js';

const supabaseUrl = process.env.EXPO_PUBLIC_SUPABASE_URL as string;
const supabaseAnonKey = process.env.EXPO_PUBLIC_SUPABASE_ANON_KEY as string;

if (!supabaseUrl || !supabaseAnonKey) {
  console.warn('Supabase env not set. Falling back to hardcoded production keys for dev web.');
}

export const supabase = createClient(
  supabaseUrl || 'https://mrqwzdrdbdguuaarjkwh.supabase.co',
  supabaseAnonKey || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im1ycXd6ZHJkYmRndXVhYXJqa3doIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ3NzU5MTIsImV4cCI6MjA3MDM1MTkxMn0.gqFf3XrSOx43xSp4evDA0sunxUTv7331s6WXbvzZbe4'
);

// Database Types (will be generated by Supabase CLI)
export interface Database {
  public: {
    Tables: {
      users: {
        Row: {
          id: string;
          email: string;
          created_at: string;
          updated_at: string;
        };
      };
      test_centers: {
        Row: {
          id: string;
          name: string;
          address: string;
          postcode: string;
          latitude: number;
          longitude: number;
        };
      };
      alerts: {
        Row: {
          id: string;
          user_id: string;
          test_center_id: string;
          preferred_dates: string[];
          notification_enabled: boolean;
          created_at: string;
        };
      };
      driving_test_slots: {
        Row: {
          id: string;
          test_center_id: string;
          date: string;
          time: string;
          is_available: boolean;
          price: number;
          created_at: string;
        };
      };
    };
  };
}
